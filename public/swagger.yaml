
openapi: 3.0.3
info:
  title: Cloud Kitchen API
  version: 1.0.0
  description: API documentation for a small cloud kitchen app.

servers:
  - url: https://cloud-kitchen-assignment.com

paths:
  /customers:
    get:
      summary: List all customers
      responses:
        '200':
          description: A list of customers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerList'
    post:
      summary: Create a new customer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerInput'
      responses:
        '201':
          description: The created customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'

  /customers/{id}:
    get:
      summary: Get a customer by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: A customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
    put:
      summary: Update a customer
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerInput'
      responses:
        '202':
          description: Updated customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
    delete:
      summary: Delete a customer
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Deleted

  /inventory_items:
    get:
      summary: List all inventory items
      responses:
        '200':
          description: A list of customers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryItemList'
    post:
      summary: Create an inventory item
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InventoryItemInput'
      responses:
        '201':
          description: Created item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryItem'

  /inventory_items/{id}:
    get:
      summary: Get inventory item by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: The item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryItem'
    put:
      summary: Update inventory item
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InventoryItemInput'
      responses:
        '202':
          description: Updated item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryItem'
    delete:
      summary: Delete inventory item
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Deleted

  /orders:
    get:
      summary: List all orders
      responses:
        '200':
          description: A list of orders
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderList'
    post:
      summary: Create an order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderInput'
      responses:
        '201':
          description: Created order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'

  /orders/{id}:
    get:
      summary: Get order by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: The order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
    put:
      summary: Update order status
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum: [placed, preparing, shipped, delivered, cancelled]
      responses:
        '202':
          description: Updated order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
    delete:
      summary: Delete order
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Deleted

components:
  schemas:
    CustomerList:
      type: array
      items:
        $ref: '#/components/schemas/Customer'
    Customer:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        created_at:
          type: string
        updated_at:
          type: string

    CustomerInput:
      type: object
      required: [customer]
      properties:
        customer:
          type: object
          required: [name, email]
          properties:
            name:
              type: string
            email:
              type: string
          
    InventoryItemList:
      type: array
      items:
        $ref: '#/components/schemas/InventoryItem'

    InventoryItem:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        quantity:
          type: integer
        low_stock_threshold:
          type: integer
        low_stock_alert_sent:
          type: boolean
        created_at:
          type: string
        updated_at:
          type: string

    InventoryItemInput:
      type: object
      required: [inventory_item]
      properties:
        inventory_item:
          required: [name, quantity]
          properties:
            name:
              type: string
            quantity:
              type: integer
            low_stock_threshold:
              type: integer
            low_stock_alert_sent:
              type: boolean
          
    OrderList:
      type: array
      items:
        $ref: '#/components/schemas/Order'

    Order:
      type: object
      properties:
        id:
          type: integer
        customer_id:
          type: integer
        status:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'

    OrderItem:
      type: object
      properties:
        inventory_item_id:
          type: integer
        quantity:
          type: integer
        created_at:
          type: string
        updated_at:
          type: string
          
    OrderItemInput:
      type: object
      properties:
        inventory_item_id:
          type: integer
        quantity:
          type: integer

    OrderInput:
      type: object
      required: [inventory_item]
      properties:
        order:
          required: [customer_id, items]
          properties:
            customer_id:
              type: integer
            items:
              type: array
              items:
                $ref: '#/components/schemas/OrderItemInput'
            
